<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>9</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>954</x>
      <y>126</y>
      <w>594</w>
      <h>153</h>
    </coordinates>
    <panel_attributes>CharacterPriorityQueueTree
bg=yellow
--
shared_ptr&lt;CharacterPriorityQueueTreeNode&gt; characterPriorityQueueTreePtr
shared_ptr&lt;HashTable&lt;unsigned int, string&gt;&gt; characterToBinaryTablePtr
--
CharacterPriorityQueueTree()
~CharacterPriorityQueueTree()
bool buildTree(priorityQueueType priorityQueue)
bool buildBinaryTable()
void buildBinaryTableEncode(shared_ptr&lt;CharacterPriorityQueueTreeNode&gt; node, string binaryString)
shared_ptr&lt;HashTable&lt;unsigned int, string&gt;&gt; getCharacterToBinaryTable()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1350</x>
      <y>270</y>
      <w>27</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;40.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>126</y>
      <w>441</w>
      <h>153</h>
    </coordinates>
    <panel_attributes>FileHandler
--

--
FileHandler()
~FileHandler()
bool readStream(string fileName, ifstream&amp; fileStream) throw (unsigned int)
bool writeStream(string fileName, ofstream&amp; fileStream) throw (unsigned int)
bool writeString(string fileName, string stringValue)
bool close(ifstream&amp; fileStream) throw (unsigned int)
bool close(ofstream&amp; fileStream) throw (unsigned int)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>0</y>
      <w>324</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>UML Diagram
Lab 4 - Encryption and Compression
Use a priority_queue to simulate a binary_tree
By: Branden Lee</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>252</x>
      <y>324</y>
      <w>315</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>&lt;class T&gt; CharacterPriorityQueueCompare
bg=orange
--

--
bool operator&lt;(const CharacterFrequencyNode &amp;rhs)
bool operator&gt;(const CharacterFrequencyNode &amp;rhs)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>180</x>
      <y>441</y>
      <w>531</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>CharacterFrequencyNode
bg=orange
--

--
unsigned int frequency
unsigned int characterCode
CharacterFrequencyNode(unsigned int frequency_, unsigned int characterCode_)
bool operator&lt;(const CharacterFrequencyNode &amp;lhs, const CharacterFrequencyNode &amp;rhs)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1287</x>
      <y>306</y>
      <w>234</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>CharacterPriorityQueueTreeNode
bg=yellow
--

--
unsigned int frequency
CharacterPriorityQueueTreeNode()
virtual ~CharacterPriorityQueueTreeNode()
virtual bool isLeaf()
virtual bool isBranch()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1449</x>
      <y>657</y>
      <w>540</w>
      <h>198</h>
    </coordinates>
    <panel_attributes>CharacterToBinaryTable
bg=green
--
shared_ptr&lt;HashTable&lt;unsigned int, string&gt;&gt; characterCodeToBinaryStringTablePtr
shared_ptr&lt;HashTable&lt;string, unsigned int&gt;&gt; binaryStringToCharacterCodeTablePtr
CharacterPriorityQueueTreeNode characterPriorityQueueTreeNodeParent
--
CharacterToBinaryTable()
~CharacterToBinaryTable()
void set(shared_ptr&lt;HashTable&lt;unsigned int, string&gt;&gt; tablePtr)
void set(shared_ptr&lt;HashTable&lt;string, unsigned int&gt;&gt; tablePtr)
void buildBinaryStringToCharacterCodeTable()
void buildCharacterCodeToBinaryStringTable()
bool characterCodeToBinaryString(unsigned int characterCode, string&amp; binaryString)
bool binaryStringToCharacterCode(string characterBinaryString, unsigned int characterCode)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>810</x>
      <y>270</y>
      <w>27</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1575</x>
      <y>126</y>
      <w>369</w>
      <h>99</h>
    </coordinates>
    <panel_attributes>Compressor
bg=green
--
shared_ptr&lt;CharacterToBinaryTable&gt; characterToBinaryTable
--
void set(shared_ptr&lt;CharacterToBinaryTable&gt; tablePtr)
bool encode(istream&amp; streamIn, ostream&amp; streamOut)
bool decode(istream&amp; streamIn, ostream&amp; streamOut)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1899</x>
      <y>216</y>
      <w>27</w>
      <h>459</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;490.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>81</y>
      <w>1269</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>using priorityQueueType = std::priority_queue&lt;shared_ptr&lt;CharacterPriorityQueueTreeNode&gt;, vector&lt;shared_ptr&lt;CharacterPriorityQueueTreeNode&gt; &gt;, CharacterPriorityQueueCompare&lt;shared_ptr&lt;CharacterPriorityQueueTreeNode&gt; &gt; &gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>468</x>
      <y>126</y>
      <w>459</w>
      <h>153</h>
    </coordinates>
    <panel_attributes>CharacterPriorityQueue
bg=orange
--
HashTable&lt;unsigned int, shared_ptr&lt;unsigned int&gt; &gt; characterFrequencyTable
unique_ptr&lt;priorityQueueType&gt; priorityQueue
--
CharacterPriorityQueue()
~CharacterPriorityQueue()
bool fileStreamIn(istream&amp; streamIn)
bool bufferHandle(string&amp; streamBuffer)
bool buildPriorityQueue()
reference_wrapper&lt;priorityQueueType&gt; getPriorityQueue()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>486</x>
      <y>270</y>
      <w>27</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>630</x>
      <y>270</y>
      <w>27</w>
      <h>189</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;190.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>972</x>
      <y>270</y>
      <w>27</w>
      <h>405</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;430.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1143</x>
      <y>684</y>
      <w>324</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;340.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>774</x>
      <y>756</y>
      <w>279</w>
      <h>207</h>
    </coordinates>
    <panel_attributes>HashTable&lt;K keyType, T valueType&gt;
--
vector&lt;unique_ptr&lt;pair&lt;K, T&gt;&gt;&gt; table
unsigned int insertAttempts
hash&lt;K&gt; hashT;
hash&lt;size_t&gt; hashSize;
--
HashTable()
HashTable(size_t size)
~HashTable()
bool insert(K key, T val)
bool at(K key, T&amp; val)
bool atIndex(size_t index, K&amp; key, T&amp; val)
size_t size()
bool resize(size_t key);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>972</x>
      <y>693</y>
      <w>99</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>747</x>
      <y>333</y>
      <w>189</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>_object: HashTable_
bg=orange
--
characterFrequencyTable</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>927</x>
      <y>657</y>
      <w>225</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>_object: HashTable_
bg=yellow
--
characterCodeToBinaryStringTable</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>810</x>
      <y>369</y>
      <w>99</w>
      <h>405</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;430.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>999</x>
      <y>477</y>
      <w>378</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>CharacterPriorityQueueTreeLeaf
bg=yellow
--
shared_ptr&lt;CharacterFrequencyNode&gt; characterFrequencyNode
--
CharacterPriorityQueueTreeLeaf(charNode)
virtual ~CharacterPriorityQueueTreeLeaf()
virtual bool isLeaf()
virtual bool isBranch()
shared_ptr&lt;CharacterFrequencyNode&gt; getCharacterNode()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1323</x>
      <y>423</y>
      <w>81</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;extends&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1467</x>
      <y>477</y>
      <w>333</w>
      <h>153</h>
    </coordinates>
    <panel_attributes>CharacterPriorityQueueTreeBranch
bg=yellow
--
shared_ptr&lt;CharacterPriorityQueueTreeNode&gt; left
shared_ptr&lt;CharacterPriorityQueueTreeNode&gt; right
--
CharacterPriorityQueueTreeBranch(left, right)
~CharacterPriorityQueueTreeBranch()
virtual bool isLeaf()
virtual bool isBranch()
shared_ptr&lt;CharacterPriorityQueueTreeNode&gt; getLeft()
shared_ptr&lt;CharacterPriorityQueueTreeNode&gt; getRight()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1485</x>
      <y>423</y>
      <w>81</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;extends&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
